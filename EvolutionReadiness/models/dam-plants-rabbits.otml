<?xml version="1.0" encoding="UTF-8"?>
<otrunk id="b37dcbd7-34ad-4187-bff0-f3a42be0b282">
  <imports>
    <import class="org.concord.data.state.OTDataStore" />
    <import class="org.concord.data.state.OTDataChannelDescription" />
    <import class="org.concord.data.state.OTDataField" />
    <import class="org.concord.data.state.OTDataTable" />
    <import class="org.concord.datagraph.state.OTDataGraph" />
    <import class="org.concord.datagraph.state.OTDataAxis" />
    <import class="org.concord.datagraph.state.OTDataGraphable" />
    <import class="org.concord.datagraph.state.OTDataCollector" />
    <import class="org.concord.datagraph.state.OTMultiDataGraph" />
    <import class="org.concord.datagraph.state.OTPluginView" />
    <import class="org.concord.datagraph.state.OTDataBarGraphable" />
    <import class="org.concord.otrunk.OTIncludeRootObject" />
    <import class="org.concord.otrunk.OTInclude" />
    <import class="org.concord.otrunk.OTSystem" />
    <import class="org.concord.otrunk.biologica.OTOrganismPlacement" />
    <import class="org.concord.otrunk.biologica.OTEnvironment" />
    <import class="org.concord.otrunk.biologica.OTOrganism" />
    <import class="org.concord.otrunk.biologica.OTWorld" />
    <import class="org.concord.otrunk.biologica.agent.OTAgentSpecies" />
    <import class="org.concord.otrunk.biologica.agent.OTAgentTrait" />
    <import class="org.concord.otrunk.biologica.agent.OTAgentPropertyImageMap" />
    <import class="org.concord.otrunk.biologica.environment.OTAddAgentButton" />
    <import class="org.concord.otrunk.biologica.environment.OTEnvironmentHolder" />
    <import class="org.concord.otrunk.biologica.data.OTBiologicaModelDataProducer" />
    <import class="org.concord.otrunk.biologica.rules.OTRule" />
    <import class="org.concord.otrunk.biologica.rules.OTRuleCondition" />
    <import class="org.concord.otrunk.biologica.rules.OTRuleConsequence" />
    <import class="org.concord.otrunk.ui.OTChoice" />
    <import class="org.concord.otrunk.ui.OTCurriculumUnit" />
    <import class="org.concord.otrunk.ui.OTPlacement" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshot" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotButton" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotAlbum" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotChooser" />
    <import class="org.concord.otrunk.view.OTViewEntry" />
    <import class="org.concord.otrunk.view.OTViewBundle" />
    <import class="org.concord.otrunk.view.OTViewMode" />
    <import class="org.concord.otrunk.view.document.OTCompoundDoc" />
    <import class="org.concord.otrunk.script.ui.OTScriptObject" />
    <import class="org.concord.otrunk.script.js.OTJavascript" />
    <import class="org.concord.otrunk.script.OTScriptEngineBundle" />
    <import class="org.concord.otrunk.script.OTScriptEngineEntry" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariable" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableComponent" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableRealObject" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableView" />
    <import class="org.concord.otrunk.script.ui.OTScriptButton" />
    <import class="org.concord.otrunk.ui.OTButton" />
    <import class="org.concord.otrunk.ui.OTProgressBar" />
    <import class="org.concord.otrunk.ui.OTSlider" />
    <import class="org.concord.otrunk.ui.OTSliderLabel" />
    <import class="org.concord.otrunk.ui.OTText" />
    <import class="org.concord.framework.otrunk.view.OTFrame" />
    <import class="org.concord.framework.otrunk.wrapper.OTObjectSet" />
  </imports>
  <idMap>
    <idMapping local_id="rabbit-species" id="8b5a6e28-684f-4673-b1d2-19a0c9b044be" />
    <idMapping local_id="plant-species" id="6904840c-03f6-4f2d-b822-bc85aebe70db" />
  </idMap>
  <objects>
    <OTSystem>
      <bundles>
        <object refid="8d880970-c22a-11dc-95ff-0800200c9a66" />
        <OTViewBundle>
          <frame>
            <OTFrame useScrollPane="false" openMaximized="false" width="900" height="500" />
          </frame>
        </OTViewBundle>
        <OTScriptEngineBundle>
          <engines>
            <OTScriptEngineEntry objectClass="org.concord.otrunk.script.js.OTJavascript" engineClass="org.concord.otrunk.script.js.OTJavascriptEngine" />
          </engines>
        </OTScriptEngineBundle>
      </bundles>
      <includes>
        <OTInclude href="../global-imports/er-view-bundle.otml" />
        <OTInclude href="species/fast-plants-roots.otml" />
        <OTInclude href="species/varied-rabbits.otml" />
      </includes>
      <root>
        <OTCompoundDoc>
          <bodyText>
            <table>
              <tr>
                <td>
                  <object refid="${env-holder}" />
                </td>
                <td>
                  <b>Year: </b><br/><object refid="${year-text}" viewid="c93a7460-e18a-11dc-95ff-0800200c9a66"/>
                  <br/>
                  <br/>
                  <object refid="${dam-button}" />
                  <table>
                    <tr>
                      <td align="center">
                        <b>Water below the dam</b>
                        <br />
                        <br />
                        Lots of water
                        <br/>
                        <object refid="${water-slider}" />
                        <br />
                        Little water
                        <br />
                        <br/>
                        Highlight:
                        <br/>
                        <object refid="${glow-choice}"/>
                      </td>
                      <td>
                        <table>
                          <tr>
                            <td height="40%">
                              <object refid="${bar-graph-top}" width="600" height="240"/>
                            </td>
                          </tr>
                          <tr>
                            <td>
                              <object refid="${bar-graph-bottom}" width="600" height="240"/>
                            </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                  <object refid="${script}" />
                </td>
              </tr>
            </table>
          </bodyText>
          <documentRefs>
            <OTEnvironmentHolder local_id="env-holder" width="590" height="460" toolbar="run,reset,info" useSpeedSlider="false">
              <environment>
                <OTEnvironment local_id="environment" environmentWidth="25" environmentHeight="25" showRunButton="false" winterLength="5" summerLength="50" showWinterImage="false" orgSizeMultiplier="1.8" backgroundImageSrc="images/dam-year0.jpg">
                  <world>
                    <OTWorld local_id="peasimple_world" speciesPath="org/concord/biologica/worlds/peasimple.xml" />
                  </world>
                  <rules>
                    <OTRule description="roots 1 needs lots of water">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="1.0" />
                      </conditions>
                      <consequences>
                        <!-- chance of survival is 1.0 at watdarn.er > 0.9, 0.8 at water < 0.5, and decreases linearly between -->
                        <OTRuleConsequence property="chance of survival" ruleScript="var distFrom90 = Math.max(0.9-water, 0.0); var dryness = Math.min(1.0, distFrom90/0.4);  return 1 - (dryness * 0.2)">
                          <propertyVariables>
                            <string>water</string>
                          </propertyVariables>
                        </OTRuleConsequence>
                        <!-- growth rate is 0.04 at water > 0.9, 0 at water < 0.5, and decreases linearly between  -->
                        <OTRuleConsequence property="growth rate" ruleScript="var distFrom90 = Math.max(0.9-water, 0.0); var dryness = Math.min(1.0, distFrom90/0.4); if (water &lt; 0.8) population_size_modifier = 0; return 0.04 - (dryness * .04) + population_size_modifier">
                          <propertyVariables>
                            <string>water</string>
                            <string>population size modifier</string>
                          </propertyVariables>
                        </OTRuleConsequence>
                      </consequences>
                    </OTRule>
                    <OTRule description="roots 2 needs medium of water">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="2.0" />
                      </conditions>
                      <consequences>
                        <!-- chance of survival is 1.0 at water > 0.7, 0.8 at water < 0.3, and decreases linearly between -->
                        <OTRuleConsequence property="chance of survival" ruleScript="var distFrom70 = Math.max(0.7-water, 0.0); var dryness = Math.min(1.0, distFrom70/0.4); return 1 - (dryness * 0.2)">
                          <propertyVariables>
                            <string>water</string>
                          </propertyVariables>
                        </OTRuleConsequence>
                        <!-- growth rate is 0.04 at water > 0.7, 0 at water < 0.3, and decreases linearly between  -->
                        <OTRuleConsequence property="growth rate" ruleScript="var distFrom70 = Math.max(0.7-water, 0.0); var dryness = Math.min(1.0, distFrom70/0.4); if (water &lt; 0.6) population_size_modifier = 0; return 0.04 - (dryness * .04) + population_size_modifier">
                          <propertyVariables>
                            <string>water</string>
                            <string>population size modifier</string>
                          </propertyVariables>
                        </OTRuleConsequence>
                      </consequences>
                    </OTRule>
                    <OTRule description="roots e doesn't care">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="3.0" />
                      </conditions>
                      <consequences>
                        <!-- growth rate is 0.04  -->
                        <OTRuleConsequence property="growth rate" ruleScript="return 0.04 + population_size_modifier">
                          <propertyVariables>
                            <string>population size modifier</string>
                          </propertyVariables>
                        </OTRuleConsequence>
                      </consequences>
                    </OTRule>
                    <OTRule description="roots 1 are short">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="1.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Short grass" />
                      </consequences>
                    </OTRule>
                    <OTRule description="roots 2 are medium">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="2.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Medium grass" />
                      </consequences>
                    </OTRule>
                    <OTRule description="roots 3 are big">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Fast Plants" />
                        <OTRuleCondition property="roots" equalsValue="3.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Big grass" />
                      </consequences>
                    </OTRule>
                    <OTRule description="small rabbits are small">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Rabbits" />
                        <OTRuleCondition property="prey variety value" equalsValue="1.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Small rabbit" />
                      </consequences>
                    </OTRule>
                    <OTRule description="medium rabbits are medium">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Rabbits" />
                        <OTRuleCondition property="prey variety value" equalsValue="2.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Medium rabbit" />
                      </consequences>
                    </OTRule>
                    <OTRule description="big rabbits are big">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Rabbits" />
                        <OTRuleCondition property="prey variety value" equalsValue="3.0" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="variety" newValueString="Big rabbit" />
                      </consequences>
                    </OTRule>
                    <OTRule description="generally no one glows">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Rabbits" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="glow" newValueBoolean="false" />
                      </consequences>
                    </OTRule>
                    <OTRule description="but some varieties might glow if set by script">
                      <conditions>
                        <OTRuleCondition property="species name" equals="Rabbits" />
                        <OTRuleCondition property="prey variety value" equalsValue="4.0" local_id="glow-condition" />
                      </conditions>
                      <consequences>
                        <OTRuleConsequence property="glow" newValueBoolean="true" />
                      </consequences>
                    </OTRule>
                  </rules>
                  <barriers>
                    <OTPlacement x="0" y="115" width="250" height="14" />
                  </barriers>
                </OTEnvironment>
              </environment>
              <addAgentsButtons>
                <OTAddAgentButton text="Add Plant A" limit="70" click="false" quantity="70">
                  <species>
                    <object refid="6904840c-03f6-4f2d-b822-bc85aebe70db" />
                  </species>
                  <agentTraits>
                    <OTAgentTrait property="roots">
                      <possibleValues>
                        <int>1</int>
                        <int>2</int>
                        <int>3</int>
                      </possibleValues>
                    </OTAgentTrait>
                    <OTAgentTrait property="growth rate">
                      <defaultValues>
                        <float>0.04</float>
                      </defaultValues>
                    </OTAgentTrait>
                    <OTAgentTrait property="age of maturity">
                      <defaultValues>
                        <int>10</int>
                      </defaultValues>
                    </OTAgentTrait>
                    <OTAgentTrait property="population size modifier">
                      <defaultValues>
                        <float>0.0</float>
                      </defaultValues>
                    </OTAgentTrait>
                  </agentTraits>
                </OTAddAgentButton>
                <OTAddAgentButton text="Add Rabbits" limit="40" click="false" quantity="40">
                  <species>
                    <object refid="8b5a6e28-684f-4673-b1d2-19a0c9b044be" />
                  </species>
                </OTAddAgentButton>
              </addAgentsButtons>
              <traitsToShow>
                <string>variety</string>
              </traitsToShow>
            </OTEnvironmentHolder>
            <OTScriptObject local_id="script" name="Setup script">
              <script>
                <OTJavascript src="scripts/gradated-sunlight-five-blocks/setup.js">
                  <script>importPackage(Packages.java.lang);
                        importPackage(Packages.java.awt);
                        importPackage(Packages.java.util);
                        importPackage(Packages.java.net);
                        importPackage(Packages.org.concord.biologica.environment);
                        importPackage(Packages.org.concord.framework.otrunk);
                        
                        var damCreated = false;
                        var startTime
                        var time
                        var previousTime
                        var isRunning = false
                        var recentlyChangedWater = true      // added a rabbit this past second
              
                        var CHANGE_WATER_RATE = 2;     // seconds before drying out environment
                        var currentWater = 1.0;
                        
                        var year;
                        var recentlyChangedYear;
                        
                        var lastBkgdUrl;
                        
                        var plantsExist = false;
                        
                        var rand = new Random();
                        
                        
                        var baseUrl = otEnvHolder.getOTObjectService().getCodebase(otEnvHolder)

                        function init() {
                          env.removeAllAgents()
                          env.setStepCount(0)
                          envHolder.pauseAction()
                          env.setWrapNorthSouth(false)
                          env.setWrapEastWest(false)
                          
                          
                          var url = new URL(baseUrl, "images/dam-year1.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url)
                          var url2 = new URL(baseUrl, "images/dam-year2.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url2)
                          var url3 = new URL(baseUrl, "images/dam-year3.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url3)
                          var url4 = new URL(baseUrl, "images/dam-year4.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url4)
                          var url5 = new URL(baseUrl, "images/dam-year5.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url5)
                          var url6 = new URL(baseUrl, "images/dam-year6.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url6)
                          var url7 = new URL(baseUrl, "images/dam-year7.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url7)
                          var url8 = new URL(baseUrl, "images/dam-year8.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url8)
                          var url9 = new URL(baseUrl, "images/dam-year9.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url9)
                          var url10 = new URL(baseUrl, "images/dam-year10.jpg")
                          envHolder.getEnvironmentView().addBackgroundImageUrl(url10)
                          
                          
                          env.addStepListener(stepListener)
                          env.addChangeListener(resetListener)
                          damButton.addOTChangeListener(damButtonListener)
                          glowChoice.addOTChangeListener(radioChangeListener)
                          
                          setup();
  
                          return true;
                        }
                        
                        function setup() {
                          var url = new URL(baseUrl, "images/dam-year0.jpg");
                          envHolder.getEnvironmentView().setBackgroundImageUrl(url);
                          lastBkgdUrl = url;
                          damCreated = false
                          damButton.setEnabled(true);
                          
                          year = 1;
                          recentlyChangedYear = true;
                          yearText.setText("1");
                          
                          recentlyChangedWater = true
                          time = 0
                          previousTime = 0
                          
                          setPropertyOnEnvironment("water", 1.0, false)
                          currentWater = 1.0
                          slider.setValue(100)
                          graphRabbits();
                        }
                        
                        var damButtonHandler =
												{
												    stateChanged: function(evt)
												    {
												      if (damButton.getClicked()){
												        createDam();
												      }
												    }
												
												}
												var damButtonListener = new OTChangeListener(damButtonHandler)
                        
              function createDam() {
                if (!damCreated) {
                  damCreated = true;
                  startTime = System.currentTimeMillis();
                  damButton.setEnabled(false);
                  makeDrier();
                }
              }
                        
              var stepHandler =
              {
                environmentStepped: function()
                {
                  if (damCreated) {
                    updateTimer();
                    checkWaterUpdating();
                    checkYear();
                   }
                   setPlantGrowthRate();
                   setRabbitGrowthRate();
                   graphRabbits();
                   if (rand.nextInt(10) == 1)
                     makeLandFertile();
                }
              }
              var stepListener = new EnvironmentStepListener(stepHandler)
              
              var resetRunHandler= {
                  environmentChanged: function(evt){
                   graphRabbits();
                    if (evt.getType() == EnvironmentChangeEvent.RESET){
                      isRunning = false
                      setup()
                    } else if (evt.getType() == EnvironmentChangeEvent.RUN){
                      isRunning = true
                      if (damCreated) { 
                        startTime = System.currentTimeMillis()
                       }
                    } else if (evt.getType() == EnvironmentChangeEvent.PAUSE){
                      previousTime = time;
                    }
                  }
                }
                      
              var resetListener = new EnvironmentChangeListener(resetRunHandler)
              
              function updateTimer(){
                timeSinceLastStart = System.currentTimeMillis() - startTime;
                time =  previousTime + timeSinceLastStart;
              }
              
              function checkYear(){
                seconds = Math.floor(time / 1000);
                if (seconds % 4 == 0){
                  if (!recentlyChangedYear){
                    year++;
                    yearText.setText(year);
                    recentlyChangedYear = true;
                  }
                } else {
                  recentlyChangedYear = false;
                }
              }
              
              function checkWaterUpdating(){
                seconds = Math.floor(time / 1000);
                if (seconds % CHANGE_WATER_RATE == 0){
                  if (!recentlyChangedWater) {
                    recentlyChangedWater = true;
                    makeDrier();
                  }
                } else {
                  recentlyChangedWater = false;
                }
              }
              
              function makeDrier() {
                if (currentWater &gt; 0){
                  currentWater -= 0.02;
                }
                setPropertyOnEnvironment("water", currentWater, true);
                slider.setValue(currentWater * 100);
                
                if (currentWater &gt; 0.9){
                  var url = new URL(baseUrl, "images/dam-year1.jpg")
                } else if (currentWater &gt; 0.8){
                  var url = new URL(baseUrl, "images/dam-year2.jpg")
                } else if (currentWater &gt; 0.7){
                  var url = new URL(baseUrl, "images/dam-year3.jpg")
                }else if (currentWater &gt; 0.6){
                  var url = new URL(baseUrl, "images/dam-year4.jpg")
                }else if (currentWater &gt; 0.5){
                  var url = new URL(baseUrl, "images/dam-year5.jpg")
                }else if (currentWater &gt; 0.4){
                  var url = new URL(baseUrl, "images/dam-year6.jpg")
                }else if (currentWater &gt; 0.3){
                  var url = new URL(baseUrl, "images/dam-year7.jpg")
                }else if (currentWater &gt; 0.2){
                  var url = new URL(baseUrl, "images/dam-year8.jpg")
                }else if (currentWater &gt; 0.1){
                  var url = new URL(baseUrl, "images/dam-year9.jpg")
                }else {
                  var url = new URL(baseUrl, "images/dam-year10.jpg")
                }
                
                if (!url.equals(lastBkgdUrl)) {
                  envHolder.getEnvironmentView().setBackgroundImageUrl(url)
                  lastBkgdUrl = url;
                 }
              }
                        
                        function setPropertyOnEnvironment(prop, val, halfOnly){
                            var cols = env.getColumns();
                            var rows = env.getRows();
                            var startRow = halfOnly ? rows/2 : 0;
                            for (var i = 0; i &lt; cols; i++) {
                              for (var j = startRow; j &lt; rows; j++) {
                                env.getEnvironmentUnit(i,j).setProperty(prop, new Float(val))
                              }
                            }
                        }
                        
function graphRabbits(){
  var allRabbits = env.getAgents(rabbitspecies); 
  var varieties = [[], [], [], [], [], []];
  for (var i = 0; i &lt; allRabbits.size(); i++){
    var rabbit = allRabbits.get(i);
    var rootSize = rabbit.getProperty("prey variety value");
    var adder = (rabbit.getLocation().y &gt; 125) ? 3 : 0;
    varieties[((rootSize - 1) + adder)].push(rabbit);
  }
  
 dataStore1.setValues(2, [1, varieties[0].length, 2, varieties[1].length, 3, varieties[2].length]);
 dataStore2.setValues(2, [1, varieties[3].length, 2, varieties[4].length, 3, varieties[5].length]);
}
                        
function setPlantGrowthRate(){
  var allPlants = env.getAgents(plantspecies); 
  if (allPlants.size() &lt; 1){
    plantsExist = false;
    return;
  } else {
    plantsExist = true;
  }
  var varieties = [[], [], [], [], [], []];
  for (var i = 0; i &lt; allPlants.size(); i++){
    var plant = allPlants.get(i);
    var rootSize = plant.getProperty("roots");
    var adder = (plant.getLocation().y &gt; 135) ? 3 : 0;
    varieties[((rootSize - 1) + adder)].push(plant);
  }
  
  
  //  System.out.println(":" + varieties[0].length + ", " + varieties[1].length + ", " +  varieties[2].length + ":" + varieties[3].length + ", " + varieties[4].length + ", " +  varieties[5].length);
  
  for (var i = 0; i &lt; 6; i++){
    setGrowthRateForVariety(varieties[i]);
  }
}

function setRabbitGrowthRate(){
  var allRabbits = env.getAgents(rabbitspecies); 
  var varieties = [[], [], [], [], [], []];
  for (var i = 0; i &lt; allRabbits.size(); i++){
    var rabbit = allRabbits.get(i);
    var rabbitSize = rabbit.getProperty("prey variety value");
    var adder = (rabbit.getLocation().y &gt; 125) ? 3 : 0;
    varieties[((rabbitSize - 1) + adder)].push(rabbit);
  }
  
  for (var i = 0; i &lt; 6; i++){
    //if (i != 3 &amp;&amp; i != 4)
      dontLetRabbitsDie(varieties[i]);
  }
}
                        
function setGrowthRateForVariety(plants)
{
  var plantSize = plants.length;
  var populationSizeModifier = 0.0;
  if (plantSize &lt; 10) {
    populationSizeModifier = 0.7;
  } else if (plantSize &lt; 15) {
    populationSizeModifier = 0.4;
  } else if (plantSize &lt; 40) {
    populationSizeModifier = 0.1;
  } else if (plantSize &lt; 60) {
    populationSizeModifier = 0.0;
  } else if (plantSize &lt; 160) {
    populationSizeModifier = -0.02;
  } else if (plantSize &lt; 190) {
    populationSizeModifier = -0.03;
  } else if (plantSize &lt; 230) {
    populationSizeModifier = -0.05;
  } else if (plantSize &gt; 230) {
    for (var i = 0; i &lt; plantSize; i++){
      if (i % 5 == 0) {
        env.removeAgent(plants[i]);
      }
    }
  }
  
  for (var i = 0; i &lt; plantSize; i++){
    plants[i].setProperty("population size modifier", populationSizeModifier);
  }
}

function dontLetRabbitsDie(rabbits){
  var rabbitsSize = rabbits.length;
  var maxOffspring = 6;
  var matingDistance = 90;
  var resourceConsumptionRate = 15;
  var metabolism = 2;
  var isImmortal = false;
  
  if (rabbitsSize &lt; 3 &amp;&amp; rabbitsSize &gt; 0 &amp;&amp; rabbits[0].getProperty("prey variety value") == 3 &amp;&amp; plantsExist) {
    maxOffspring = 12;
    matingDistance = 250;
    resourceConsumptionRate = 0;
    metabolism = 1;
    age = 30;
    isImmortal = true;
  } else if (rabbitsSize &lt; 4 &amp;&amp; rabbitsSize &gt; 0 &amp;&amp; rabbits[0].getProperty("prey variety value") == 3 &amp;&amp; plantsExist) {
    maxOffspring = 10;
    matingDistance = 170;
    resourceConsumptionRate = 1;
    metabolism = 1;
  } else if (rabbitsSize &lt; 5 &amp;&amp; rabbitsSize &gt; 0 &amp;&amp; rabbits[0].getProperty("prey variety value") == 3) {
    maxOffspring = 9;
    matingDistance = 160;
    resourceConsumptionRate = 4;
    metabolism = 1;
  } else if (rabbitsSize &lt; 6) {
    maxOffspring = 8;
    matingDistance = 140;
    resourceConsumptionRate = 5;
    metabolism = 1;
  } else if (rabbitsSize &lt; 7) {
    maxOffspring = 7;
    matingDistance = 130;
    resourceConsumptionRate = 8;
    metabolism = 2;
  } else if (rabbitsSize &gt; 35) {
    maxOffspring = 0;
    resourceConsumptionRate = 18;
    metabolism = 9;
  } else if (rabbitsSize &gt; 25) {
    maxOffspring = 2;
    matingDistance = 80;
    resourceConsumptionRate = 18;
    metabolism = 5;
  } else if (rabbitsSize &gt; 20) {
    maxOffspring = 5;
    matingDistance = 80;
    resourceConsumptionRate = 16;
    metabolism = 3;
  }
  
  for (var i = 0; i &lt; rabbitsSize; i++){
    rabbits[i].setProperty("is immortal", isImmortal);
    rabbits[i].setProperty("max offspring", maxOffspring);
    rabbits[i].setProperty("mating distance", matingDistance);
    rabbits[i].setProperty("Resource Consumption Rate", resourceConsumptionRate);
    rabbits[i].setProperty("metabolism", metabolism);
  }
}

function makeLandFertile() {
  env.replenishResources();
  env.replenishResources();
  var allPlants = env.getAgents(plantspecies); 
  for (var i = 0; i &lt; allPlants.size(); i++){
    var plant = allPlants.get(i);
    if (plant.getLocation().y &gt; 114 &amp;&amp; plant.getLocation().y &lt; 130) {
      env.removeAgent(plant);
    }
  }
}

var radioChangeHandler =
{
    stateChanged: function(evt)
    {
      if (glowChoice.getCurrentChoices().size() &lt; 1)
        return;
      
        var currChoice = glowChoice.getCurrentChoices().get(0)
        var choice = currChoice.getName()
        if (choice == "None"){
          glowCondition.setEquals(4.0);
        } else if (choice == "Big rabbits"){
          glowCondition.setEquals(3.0);
        } else if (choice == "Medium rabbits"){
          glowCondition.setEquals(2.0);
        } else if (choice == "Small rabbits"){
          glowCondition.setEquals(1.0);
        }
        
    }

}
var radioChangeListener = new OTChangeListener(radioChangeHandler)

                        function save() {
                          return true;
                        }
                        
// by putting these urls after "src" we can ensure that the installer will cache
// the images:
// src="images/dam-year0.jpg"
// src="images/dam-year1.jpg"
// src="images/dam-year2.jpg"
// src="images/dam-year3.jpg"
// src="images/dam-year4.jpg"
// src="images/dam-year5.jpg"
// src="images/dam-year6.jpg"
// src="images/dam-year7.jpg"
// src="images/dam-year8.jpg"
// src="images/dam-year9.jpg"
// src="images/dam-year10.jpg"
// src="images/dam-rv-year1.png"
// src="images/dam-rv-year2.png"
// src="images/dam-rv-year3.png"
// src="images/dam-rv-year4.png"
// src="images/dam-rv-year5.png"
// src="images/dam-rv-year6.png"
// src="images/dam-rv-year7.png"
// src="images/dam-rv-year8.png"
// src="images/dam-rv-year9.png"</script>
                </OTJavascript>
              </script>
              <variables>
                <OTScriptVariableRealObject name="env">
                  <reference>
                    <object refid="${environment}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariableRealObject name="envHolder">
                  <reference>
                    <object refid="${env-holder}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariable name="otEnvHolder">
                  <reference>
                    <object refid="${env-holder}" />
                  </reference>
                </OTScriptVariable>
                <OTScriptVariableRealObject name="holder">
                  <reference>
                    <object refid="${env-holder}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariable name="slider">
                  <reference>
                    <object refid="${water-slider}" />
                  </reference>
                </OTScriptVariable>
                <OTScriptVariable name="damButton">
                  <reference>
                    <object refid="${dam-button}" />
                  </reference>
                </OTScriptVariable>
                <OTScriptVariableRealObject name="rabbitspecies">
                  <reference>
                    <object refid="${rabbit-species}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariableRealObject name="plantspecies">
                  <reference>
                    <object refid="${plant-species}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariableRealObject name="dataStore1">
                  <reference>
                    <object refid="${datastore1}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariableRealObject name="dataStore2">
                  <reference>
                    <object refid="${datastore2}" />
                  </reference>
                </OTScriptVariableRealObject>
                <OTScriptVariable name="yearText">
                  <reference>
                    <object refid="${year-text}" />
                  </reference>
                </OTScriptVariable>
                <OTScriptVariable name="glowChoice">
                  <reference>
                    <object refid="${glow-choice}" />
                  </reference>
                </OTScriptVariable>
                <OTScriptVariableRealObject name="glowCondition">
                  <reference>
                    <object refid="${glow-condition}"/>
                  </reference>
                </OTScriptVariableRealObject>
              </variables>
              <scriptState />
            </OTScriptObject>
            <OTProgressBar local_id="water-slider" minimum="-5" maximum="100" value="100" vertical="true" />
            <OTButton local_id="dam-button" text="Build Dam" enabled="true" />
            <OTDataGraph title="Rabbits in top half of field" local_id="bar-graph-top" showToolbar="false">
				      <graphables>
						    <OTDataBarGraphable local_id="graphable1" lineWidth="30" maxBarsToSelect="0">
						          <dataStore>
						            <OTDataStore local_id="datastore1" numberChannels="2">
								          <channelDescriptions>
								            <OTDataChannelDescription name="Rabbit types" precision="0"/>
								            <OTDataChannelDescription name="Number of rabbits" precision="2"/>
								          </channelDescriptions>
								          <valuesString></valuesString>
								        </OTDataStore>
						          </dataStore>
						    </OTDataBarGraphable>
				      </graphables>
		          <xDataAxis>
		            <OTDataAxis min="0" max="4" label="Rabbit types" intervalWorld="1">
                  <customGridLabels>
                    <entry key="1.0"><string>Small::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/smallbunny.gif</string></entry>
                    <entry key="2.0"><string>Medium::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/medbunny.gif</string></entry>
                    <entry key="3.0"><string>Big::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/bigbunny.gif</string></entry>
                  </customGridLabels>
                 </OTDataAxis>
		          </xDataAxis>
		          <yDataAxis>
		            <OTDataAxis min="0" max="50" label="Number of rabbits"/>
		          </yDataAxis>
				    </OTDataGraph>
				    <OTDataGraph title="Rabbits in bottom half of field" local_id="bar-graph-bottom" showToolbar="false" aspectRatio="0.2">
              <graphables>
                <OTDataBarGraphable local_id="graphable2" lineWidth="30" maxBarsToSelect="0">
                      <dataStore>
                        <OTDataStore local_id="datastore2" numberChannels="2">
                          <channelDescriptions>
                            <OTDataChannelDescription name="Rabbit types" precision="0"/>
                            <OTDataChannelDescription name="Number of rabbits" precision="2"/>
                          </channelDescriptions>
                          <valuesString></valuesString>
                        </OTDataStore>
                      </dataStore>
                </OTDataBarGraphable>
              </graphables>
              <xDataAxis>
                <OTDataAxis min="0" max="4" label="Rabbit types" intervalWorld="1">
                  <customGridLabels>
                    <entry key="1.0"><string>Small::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/smallbunny.gif</string></entry>
                    <entry key="2.0"><string>Medium::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/medbunny.gif</string></entry>
                    <entry key="3.0"><string>Big::http://otrunk.concord.org/examples/EvolutionReadiness/models/species/images/bigbunny.gif</string></entry>
                  </customGridLabels>
                 </OTDataAxis>
              </xDataAxis>
              <yDataAxis>
                <OTDataAxis min="0" max="50" label="Number of rabbits"/>
              </yDataAxis>
            </OTDataGraph>
            <OTText local_id="year-text" text="2010"/>
            <OTChoice local_id="glow-choice" name="Multiple choice" horizontal="false" alignContent="0">
              <choices>
                <OTCompoundDoc name="None" id="3fbca408-d205-4f9b-83d5-564cd5680f37">
                  <bodyText>None</bodyText>
                </OTCompoundDoc>
                <OTCompoundDoc name="Big rabbits">
                  <bodyText>Big rabbits</bodyText>
                </OTCompoundDoc>
                <OTCompoundDoc name="Medium rabbits">
                  <bodyText>Medium rabbits</bodyText>
                </OTCompoundDoc>
                <OTCompoundDoc name="Small rabbits">
                  <bodyText>Small rabbits</bodyText>
                </OTCompoundDoc>
              </choices>
              <currentChoices>
                <object refid="3fbca408-d205-4f9b-83d5-564cd5680f37" />
              </currentChoices>
            </OTChoice>
          </documentRefs>
        </OTCompoundDoc>
      </root>
    </OTSystem>
  </objects>
</otrunk>

