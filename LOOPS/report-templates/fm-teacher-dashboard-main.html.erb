<%
PICK_N_CLASS = java.lang.Class::for_name("org.concord.otrunk.intrasession.OTMultiUserPickN")
POLL_CLASS = java.lang.Class::for_name("org.concord.otrunk.intrasession.OTMultiUserPollingGraph")
DOC_CLASS = java.lang.Class::for_name("org.concord.otrunk.view.document.OTDocument")
CARD_CLASS = java.lang.Class::for_name("org.concord.otrunk.ui.OTCardContainer")

def getClassString(klass)
  if PICK_N_CLASS.is_assignable_from(klass)
    "Pick N"
  elsif POLL_CLASS.is_assignable_from(klass)
    "Poll"
  else
    type.to_s
  end
end

activities = {}
objects = @otrunk.getAllObjects(org.concord.otrunk.intrasession.OTMultiUser.java_class)

objects.each do |multi_user|
  section_otid_paths = @otrunk.getIncomingReferences(multi_user.global_id, org.concord.otrunk.ui.OTSection.java_class, true)
  section_otid_paths.each do |section_path|
    step_indexes = []
    section = @otrunk.root_object_service.getOTObject(section_path[section_path.size - 1].source)
    section_path.each do |reference|
      source = @otrunk.root_object_service.getOTObject(reference.source)
      if CARD_CLASS.is_assignable_from(source.get_class)
        dest = @otrunk.root_object_service.getOTObject(reference.dest)
        if DOC_CLASS.is_assignable_from(dest.get_class)
          # figure out what step this is
          i = 0
          source.cards.each do |card|
            i += 1
            if reference.dest.equals(card.getGlobalId())
              step_indexes.unshift(i)
            end
          end
        end
      end
    end
    # now that we've figured out the full path to the object, save the info
    activities[section] ||= {}
    activities[section][step_indexes] ||= []
    activities[section][step_indexes] << multi_user
  end
end

otTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
activityTabs = otTabContainer.tabs
activities.keys.sort {|a,b| a.name <=> b.name }.each do |activity_key|
  activity = activities[activity_key]
  activityTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
  activityTabs.putObject(activity_key.name, activityTabContainer)
  
  stepTabs = activityTabContainer.tabs
  activity.keys.sort.each do |step_key|
    step = activity[step_key]
    tabTitle = "Step #{step_key.join(".")}"
    stepTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
    stepTabContainer.contents_may_scroll = true
    stepTabContainer.height = 500
    stepTabContainer.width = 700
    substepTabs = stepTabContainer.tabs
    stepTabs.putObject(tabTitle, stepTabContainer)
    i = 0
    step.each do |obj|
      i += 1
      tabTitle = "#{getClassString(obj.get_class)}"
      if step.size > 1
        tabTitle << " (#{i})"
      end
      substepTabs.putObject(tabTitle, obj)
    end
  end
end
%>

<%= embedObject(otTabContainer) %>
