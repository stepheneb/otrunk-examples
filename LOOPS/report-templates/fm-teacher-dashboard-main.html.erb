<%
PICK_N_CLASS = java.lang.Class::for_name("org.concord.otrunk.intrasession.OTMultiUserPickN")
POLL_CLASS = java.lang.Class::for_name("org.concord.otrunk.intrasession.OTMultiUserPollingGraph")

def getClassString(klass)
  if PICK_N_CLASS.is_assignable_from(klass)
    "Pick N"
  elsif POLL_CLASS.is_assignable_from(klass)
    "Poll"
  else
    type.to_s
  end
end

activities = {}
objects = @otrunk.getAllObjects(org.concord.otrunk.intrasession.OTMultiUser.java_class)

objects.each do |wrapper|
  multiObj = wrapper.object
  doc_otids = @otrunk.getIncomingReferences(wrapper.global_id, org.concord.otrunk.view.document.OTDocument.java_class, true)
  doc_otids.each do |doc_otid|
    section_otids = @otrunk.getIncomingReferences(doc_otid, org.concord.otrunk.ui.OTSection.java_class, true)
    section_otids.each do |otid|
      section = @otrunk.root_object_service.getOTObject(otid)
      i = 0
      section.content.cards.each do |card|
        i += 1
        if doc_otid.equals(card.getGlobalId())
          activities[section] ||= {}
          activities[section][i] ||= []
          activities[section][i] << wrapper
        end
      end
    end
  end
end

otTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
activityTabs = otTabContainer.tabs
activities.keys.sort {|a,b| a.name <=> b.name }.each do |activity_key|
  activity = activities[activity_key]
  activityTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
  activityTabContainer.contents_may_scroll = true
  activityTabContainer.height = 500
  activityTabContainer.width = 700
  activityTabs.putObject(activity_key.name, activityTabContainer)
  
  stepTabs = activityTabContainer.tabs
  activity.keys.sort.each do |step_key|
    step = activity[step_key]
    tabTitle = "Step #{step_key}"
    stepTabContainer = @otrunk.root_object_service.createObject(org.concord.otrunk.ui.OTTabContainer.java_class)
    stepTabContainer.contents_may_scroll = true
    substepTabs = stepTabContainer.tabs
    stepTabs.putObject(tabTitle, stepTabContainer)
    i = 0
    step.each do |obj|
      i += 1
      tabTitle = "#{getClassString(obj.get_class)}"
      if step.size > 1
        tabTitle << " (#{i})"
      end
      substepTabs.putObject(tabTitle, obj)
    end
  end
end
%>

<%= embedObject(otTabContainer) %>
